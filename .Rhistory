# this must equal the levels of the Order
data_top_free$Family <- as.factor(data_top_free$Family) # setting the Order columns to factor
data_top_part$Family <- as.factor(data_top_part$Family) # setting the Order columns to factor
names(myColors) <- levels(c(data_top_free$Family, data_top_part$Family)) # setting the names of the colors to coordinate with the Order columns of each dataframe
level_order <- c("STN089", "STN132", "STN106", "STN20", "STN198", "STN002", "STN004", "STN012", "STN115", "STN12.3", "STN014", "STN078", "STN056a", "STN056b", "STN22", "STN068", "STN146", "STN181", "STN174", "STN151.2", "STN153")
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + #facet_wrap(~factor(True_Flow, levels=c("Inflow", "Outflow"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_free
data_free <- ps_free %>%
tax_glom(taxrank = "Family") %>% # agglomerate at Order level, can change to different taxonomic level!
prune_taxa(taxa_sums(.) > 0, .) %>%
transform_sample_counts(function(x) {x/sum(x)})  # Transform to rel. abundance (normalize data
data_top_free <- data_free %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>% # Filter out low abundance taxa
arrange(Family)
data_top_free <- aggregate(Abundance ~ Station * Family, data = data_top_free, FUN = mean)
data_part <- ps_part %>%
tax_glom(taxrank = "Family") %>% # agglomerate at Order level
transform_sample_counts(function(x) {x/sum(x)} )  # Transform to rel. abundance (normalize data)
data_top_part <- data_part %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>%
arrange(Family)# Filter out low abundance taxa
data_top_part <- aggregate(Abundance ~ Station * Family, data = data_top_part, FUN = mean)
myColors <- c(brewer.pal(9, "Paired"),'#e66101','darkgreen','#fdb863','#5e3c99', '#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','darkred','#c7eae5','#80cdc1','#35978f','#01665e','#4169E1', "#A43D27", "#497687", "#5E4987", "darkgoldenrod", "lightblue2", "darkblue", "#a37fff", "seagreen", "purple", "black")
# this must equal the levels of the Order
data_top_free$Family <- as.factor(data_top_free$Family) # setting the Order columns to factor
data_top_part$Family <- as.factor(data_top_part$Family) # setting the Order columns to factor
names(myColors) <- levels(c(data_top_free$Family, data_top_part$Family)) # setting the names of the colors to coordinate with the Order columns of each dataframe
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + #facet_wrap(~factor(True_Flow, levels=c("Inflow", "Outflow"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_free
data_part <- ps_part %>%
tax_glom(taxrank = "Family") %>% # agglomerate at Order level
transform_sample_counts(function(x) {x/sum(x)} )  # Transform to rel. abundance (normalize data)
data_top_part <- data_part %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>%
arrange(Family)# Filter out low abundance taxa
data_top_part <- aggregate(Abundance ~ Station * Family * watertype, data = data_top_part, FUN = mean)
data_free <- ps_free %>%
tax_glom(taxrank = "Family") %>% # agglomerate at Order level, can change to different taxonomic level!
prune_taxa(taxa_sums(.) > 0, .) %>%
transform_sample_counts(function(x) {x/sum(x)})  # Transform to rel. abundance (normalize data
data_top_free <- data_free %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>% # Filter out low abundance taxa
arrange(Family)
data_top_free <- aggregate(Abundance ~ Station * Family * watertype, data = data_top_free, FUN = mean)
myColors <- c(brewer.pal(9, "Paired"),'#e66101','darkgreen','#fdb863','#5e3c99', '#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','darkred','#c7eae5','#80cdc1','#35978f','#01665e','#4169E1', "#A43D27", "#497687", "#5E4987", "darkgoldenrod", "lightblue2", "darkblue", "#a37fff", "seagreen", "purple", "black")
# this must equal the levels of the Order
data_top_free$Family <- as.factor(data_top_free$Family) # setting the Order columns to factor
data_top_part$Family <- as.factor(data_top_part$Family) # setting the Order columns to factor
names(myColors) <- levels(c(data_top_free$Family, data_top_part$Family)) # setting the names of the colors to coordinate with the Order columns of each dataframe
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + facet_wrap(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_free
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_free
barplot_part <- ggplot(data_top_part, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) #facet_wrap(~factor(True_Flow, levels=c("Inflow", "Outflow"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Particle-associated")
barplot_part <- ggplot(data_top_part, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + #facet_wrap(~factor(True_Flow, levels=c("Inflow", "Outflow"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Particle-associated")
barplot_part
total <- rbind(data_top_part, data_top_free)
# make combined FAKE plot to grab legend from and to put in the combine plot :^)
legend_plot <- ggplot(total, aes(x = Station, y = Abundance, fill = Family)) +
geom_bar(stat = "identity", position="fill", width=2) + theme_classic() +
# geom_col(position = "dodge") + # changes to multiple bars
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = myColors) +
guides(fill = guide_legend(override.aes = list(color = "black", size = 1))) # adds black outline around legend
# get legend from the fake combined plot
legend_combined <- get_legend(legend_plot)
ps_combined <- ggarrange(
barplot_free, barplot_part, labels = NULL,
common.legend = TRUE, legend = "right", legend.grob = legend_combined
)
ps_combined
ggsave("final_graphics/rel_abund_archaea.pdf", width = 13, height = 7, dpi = 150)
data_free <- ps_free %>%
tax_glom(taxrank = "Phylum") %>% # agglomerate at Order level, can change to different taxonomic level!
prune_taxa(taxa_sums(.) > 0, .) %>%
transform_sample_counts(function(x) {x/sum(x)})  # Transform to rel. abundance (normalize data
data_top_free <- data_free %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>% # Filter out low abundance taxa
arrange(Phylum)
data_top_free <- aggregate(Abundance ~ Station * Phylum * watertype, data = data_top_free, FUN = mean)
# particle-associated
data_part <- ps_part %>%
tax_glom(taxrank = "Phylum") %>% # agglomerate at Order level
transform_sample_counts(function(x) {x/sum(x)} )  # Transform to rel. abundance (normalize data)
data_top_part <- data_part %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>%
arrange(Phylum)# Filter out low abundance taxa
data_top_part <- aggregate(Abundance ~ Station * Phylum * watertype, data = data_top_part, FUN = mean)
myColors <- c(brewer.pal(9, "Paired"),'#e66101','darkgreen','#fdb863','#5e3c99', '#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','darkred','#c7eae5','#80cdc1','#35978f','#01665e','#4169E1', "#A43D27", "#497687", "#5E4987", "darkgoldenrod", "lightblue2", "darkblue", "#a37fff", "seagreen", "purple", "black")
# this must equal the levels of the Order
data_top_free$Phylum <- as.factor(data_top_free$Family) # setting the Order columns to factor
data_free <- ps_free %>%
tax_glom(taxrank = "Phylum") %>% # agglomerate at Order level, can change to different taxonomic level!
prune_taxa(taxa_sums(.) > 0, .) %>%
transform_sample_counts(function(x) {x/sum(x)})  # Transform to rel. abundance (normalize data
data_top_free <- data_free %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>% # Filter out low abundance taxa
arrange(Phylum)
data_top_free <- aggregate(Abundance ~ Station * Phylum * watertype, data = data_top_free, FUN = mean)
# particle-associated
data_part <- ps_part %>%
tax_glom(taxrank = "Phylum") %>% # agglomerate at Order level
transform_sample_counts(function(x) {x/sum(x)} )  # Transform to rel. abundance (normalize data)
data_top_part <- data_part %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>%
arrange(Phylum)# Filter out low abundance taxa
data_top_part <- aggregate(Abundance ~ Station * Phylum * watertype, data = data_top_part, FUN = mean)
data_free
data_part
data_top_free <- aggregate(Abundance ~ Station * Phylum * watertype, data = data_top_free, FUN = mean)
# particle-associated
data_part <- ps_part %>%
tax_glom(taxrank = "Phylum") %>% # agglomerate at Order level
transform_sample_counts(function(x) {x/sum(x)} )  # Transform to rel. abundance (normalize data)
data_top_part <- data_part %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>%
arrange(Phylum)# Filter out low abundance taxa
data_top_part <- aggregate(Abundance ~ Station * Phylum * watertype, data = data_top_part, FUN = mean)
myColors <- c(brewer.pal(9, "Paired"),'#e66101','darkgreen','#fdb863','#5e3c99', '#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','darkred','#c7eae5','#80cdc1','#35978f','#01665e','#4169E1', "#A43D27", "#497687", "#5E4987", "darkgoldenrod", "lightblue2", "darkblue", "#a37fff", "seagreen", "purple", "black")
# this must equal the levels of the Order
data_top_free$Phylum <- as.factor(data_top_free$Family) # setting the Order columns to factor
myColors <- c(brewer.pal(9, "Paired"),'#e66101','darkgreen','#fdb863','#5e3c99', '#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','darkred','#c7eae5','#80cdc1','#35978f','#01665e','#4169E1', "#A43D27", "#497687", "#5E4987", "darkgoldenrod", "lightblue2", "darkblue", "#a37fff", "seagreen", "purple", "black")
# this must equal the levels of the Order
data_top_free$Phylum <- as.factor(data_top_free$Phylum) # setting the Order columns to factor
data_top_part$Phylum <- as.factor(data_top_part$Phylum) # setting the Order columns to factor
names(myColors) <- levels(c(data_top_free$Phylum, data_top_part$Phylum)) # setting the names of the colors to coordinate with the Order columns of each dataframe
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Phylum, group = Family)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_free
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Phylum, group = Phylum)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_free
barplot_part <- ggplot(data_top_part, aes(x = factor(Station, level = level_order), y = Abundance, fill = Phylum, group = Phylum)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + #facet_wrap(~factor(True_Flow, levels=c("Inflow", "Outflow"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Particle-associated")
barplot_part
total <- rbind(data_top_part, data_top_free)
# make combined FAKE plot to grab legend from and to put in the combine plot :^)
legend_plot <- ggplot(total, aes(x = Station, y = Abundance, fill = Phylum)) +
geom_bar(stat = "identity", position="fill", width=2) + theme_classic() +
# geom_col(position = "dodge") + # changes to multiple bars
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = myColors) +
guides(fill = guide_legend(override.aes = list(color = "black", size = 1))) # adds black outline around legend
legend_combined <- get_legend(legend_plot)
# combines the two graphs together
ps_combined <- ggarrange(
barplot_free, barplot_part, labels = NULL,
common.legend = TRUE, legend = "right", legend.grob = legend_combined
)
ps_combined
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Phylum, group = Phylum)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
#geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_part <- ggplot(data_top_part, aes(x = factor(Station, level = level_order), y = Abundance, fill = Phylum, group = Phylum)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + #facet_wrap(~factor(True_Flow, levels=c("Inflow", "Outflow"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
#geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Particle-associated")
ggsave("graphics/part_associated_barplot_bottom_all_stations.pdf", width = 8, height = 6, dpi = 150)
######################
#  stacked barplots  #
######################
#  BOTH COMMUNITIES  #
######################
total <- rbind(data_top_part, data_top_free)
# make combined FAKE plot to grab legend from and to put in the combine plot :^)
legend_plot <- ggplot(total, aes(x = Station, y = Abundance, fill = Phylum)) +
geom_bar(stat = "identity", position="fill", width=2) + theme_classic() +
# geom_col(position = "dodge") + # changes to multiple bars
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = myColors) +
guides(fill = guide_legend(override.aes = list(color = "black", size = 1))) # adds black outline around legend
legend_combined <- get_legend(legend_plot)
# combines the two graphs together
ps_combined <- ggarrange(
barplot_free, barplot_part, labels = NULL,
common.legend = TRUE, legend = "right", legend.grob = legend_combined
)
ggsave("final_graphics/rel_abund_archaea.pdf", width = 13, height = 7, dpi = 150)
data_free <- ps_free %>%
tax_glom(taxrank = "Family") %>% # agglomerate at Order level, can change to different taxonomic level!
prune_taxa(taxa_sums(.) > 0, .) %>%
transform_sample_counts(function(x) {x/sum(x)})  # Transform to rel. abundance (normalize data
data_top_free <- data_free %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>% # Filter out low abundance taxa
arrange(Family)
data_top_free <- aggregate(Abundance ~ Station * Family * watertype, data = data_top_free, FUN = mean)
# particle-associated
data_part <- ps_part %>%
tax_glom(taxrank = "Family") %>% # agglomerate at Order level
transform_sample_counts(function(x) {x/sum(x)} )  # Transform to rel. abundance (normalize data)
data_top_part <- data_part %>%
psmelt() %>% # transform a phyloseq object into a data frame, otherwise graphs wont work
filter(Abundance > 0.035) %>%
arrange(Family)# Filter out low abundance taxa
data_top_part <- aggregate(Abundance ~ Station * Family * watertype, data = data_top_part, FUN = mean)
myColors <- c(brewer.pal(9, "Paired"),'#e66101','darkgreen','#fdb863','#5e3c99', '#543005','#8c510a','#bf812d','#dfc27d','#f6e8c3','darkred','#c7eae5','#80cdc1','#35978f','#01665e','#4169E1', "#A43D27", "#497687", "#5E4987", "darkgoldenrod", "lightblue2", "darkblue", "#a37fff", "seagreen", "purple", "black")
# this must equal the levels of the Order
data_top_free$Family <- as.factor(data_top_free$Family) # setting the Order columns to factor
data_top_part$Family <- as.factor(data_top_part$Family) # setting the Order columns to factor
names(myColors) <- levels(c(data_top_free$Family, data_top_part$Family)) # setting the names of the colors to coordinate with the Order columns of each dataframe
######################
#  stacked barplots  #
######################
#    FREE-LIVING     #
######################
#"Surface", "Mixed Layer",
barplot_free <- ggplot(data_top_free, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
#geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Free-living")
barplot_part <- ggplot(data_top_part, aes(x = factor(Station, level = level_order), y = Abundance, fill = Family, group = Family)) + facet_grid(~factor(watertype, levels=c("AASW", "AASW-WW", "WW", "WW-CDW", "CDW"))~.) + #facet_wrap(~factor(True_Flow, levels=c("Inflow", "Outflow"))~.) + # facet grid seperates by different levels, horizontally
geom_bar(stat = "identity", position="fill", color= "black", linewidth=0.3, width=0.9) + theme_classic() + # adds black outline to boxes
scale_y_continuous(expand = c(0, 0)) + # extends the barplots to the axies
scale_fill_manual(values = myColors, drop = FALSE) + # set the colors with custom colors (myColors)
#scale_x_discrete(
#  breaks = plot_breaks, # setting breaks
# labels = plot_labels, # settting levels
#  drop = FALSE
#) +
theme(text = element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.6),
axis.title.x = element_blank(),
axis.text=element_text(size=7),
axis.text.x = element_text(size=9, angle=90, vjust=0.5),
axis.title.y = element_blank(),
legend.position = "none"
# Reducing space between facets
) + # Optionally remove panel borders
#geom_vline(xintercept = c(2.5), linetype = "dashed", linewidth=0.6, color = "black") +# Add vertical lines
guides(fill = guide_legend(reverse = FALSE, keywidth = 1, keyheight = 1)) + # for the legend, if you want one
#ylab("Relative Abundance (Order > 2%) \n") + # remove # if you want y-axis title
ggtitle("Particle-associated")
total <- rbind(data_top_part, data_top_free)
# make combined FAKE plot to grab legend from and to put in the combine plot :^)
legend_plot <- ggplot(total, aes(x = Station, y = Abundance, fill = Family)) +
geom_bar(stat = "identity", position="fill", width=2) + theme_classic() +
# geom_col(position = "dodge") + # changes to multiple bars
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = myColors) +
guides(fill = guide_legend(override.aes = list(color = "black", size = 1))) # adds black outline around legend
ps_combined <- ggarrange(
barplot_free, barplot_part, labels = NULL,
common.legend = TRUE, legend = "right", legend.grob = legend_combined
)
ps_combined
total <- rbind(data_top_part, data_top_free)
# make combined FAKE plot to grab legend from and to put in the combine plot :^)
legend_plot <- ggplot(total, aes(x = Station, y = Abundance, fill = Family)) +
geom_bar(stat = "identity", position="fill", width=2) + theme_classic() +
# geom_col(position = "dodge") + # changes to multiple bars
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = myColors) +
guides(fill = guide_legend(override.aes = list(color = "black", size = 1))) # adds black outline around legend
# get legend from the fake combined plot
legend_combined <- get_legend(legend_plot)
ps_combined <- ggarrange(
barplot_free, barplot_part, labels = NULL,
common.legend = TRUE, legend = "right", legend.grob = legend_combined
)
ps_combined
ggsave("final_graphics/rel_abund_archaea.pdf", width = 13, height = 7, dpi = 150)
